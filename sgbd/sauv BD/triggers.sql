--------------------------------------------------------
--  Fichier créé - mardi-mars-01-2011   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table BAREMEMINMAXJAVAUXRA
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."BAREMEMINMAXJAVAUXRA" 
   (	"NUMDEP" VARCHAR2(6 BYTE), 
	"BAREMEMIN" NUMBER, 
	"BAREMEMAX" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEPARTEMENTS
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."DEPARTEMENTS" 
   (	"NUMDEP" VARCHAR2(6 BYTE), 
	"NOMDEP" VARCHAR2(40 BYTE), 
	"NUMSECU" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYES
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."EMPLOYES" 
   (	"NUMSECU" VARCHAR2(8 BYTE), 
	"NOM" VARCHAR2(30 BYTE), 
	"PRENOM" VARCHAR2(30 BYTE), 
	"DATENAIS" DATE, 
	"SEXE" CHAR(1 BYTE), 
	"ADRESSE" VARCHAR2(30 BYTE), 
	"CODEPOSTAL" CHAR(4 BYTE), 
	"COMMUNE" VARCHAR2(30 BYTE), 
	"BAREME" NUMBER(5,0), 
	"NUMDEP" VARCHAR2(6 BYTE), 
	"NUMCHEF" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEBAREMEJAVAUXRA
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "JAVAUXRA"."EMPLOYEBAREMEJAVAUXRA" 
BEFORE INSERT OR UPDATE OF BAREME,NUMDEP ON EMPLOYES
FOR EACH ROW
DECLARE
  DansDepartements NUMBER;
  BaremeMin NUMBER;
  BaremeMax NUMBER;
BEGIN
  IF :NEW.NUMDEP IS NULL THEN
    :NEW.NUMDEP := 'd00005';
    
    SELECT BAREMEMIN INTO :NEW.BAREME
    FROM BAREMEMINMAXJAVAUXRA
    WHERE NUMDEP = :NEW.NUMDEP;
  ELSE
    SELECT COUNT(*) INTO DansDepartements
    FROM DEPARTEMENTS D
    WHERE D.NUMDEP = :NEW.NUMDEP;
    
    IF DansDepartements <> 1 THEN
      :NEW.NUMDEP := 'd00005';
      
      SELECT BAREMEMIN INTO :NEW.BAREME
      FROM BAREMEMINMAXJAVAUXRA
      WHERE NUMDEP = :NEW.NUMDEP;
    ELSE
      IF :NEW.BAREME IS NOT NULL THEN
        SELECT BAREMEMIN INTO BaremeMin
        FROM BAREMEMINMAXJAVAUXRA
        WHERE NUMDEP = :NEW.NUMDEP;
        
        SELECT BAREMEMAX INTO BaremeMax
        FROM BAREMEMINMAXJAVAUXRA
        WHERE NUMDEP = :NEW.NUMDEP;
        
        IF :NEW.BAREME < BaremeMin OR :NEW.BAREME > BaremeMax THEN
          SELECT BAREMEMIN INTO :NEW.BAREME
          FROM BAREMEMINMAXJAVAUXRA
          WHERE NUMDEP = :NEW.NUMDEP;
        END IF;
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "JAVAUXRA"."EMPLOYEBAREMEJAVAUXRA" ENABLE;
--------------------------------------------------------
--  DDL for Table ETUDIANTS
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."ETUDIANTS" 
   (	"MATRICULE" VARCHAR2(13 CHAR), 
	"NOM" VARCHAR2(50 CHAR), 
	"PRENOM" VARCHAR2(30 CHAR), 
	"NATIONALITE" VARCHAR2(3 CHAR), 
	"ETATCIVIL" CHAR(1 BYTE), 
	"SEXE" CHAR(1 BYTE), 
	"SITUATION" CHAR(1 BYTE), 
	"DATEENTREE" DATE, 
	"DATENAISSANCE" DATE, 
	"LIEUNAISSANCE" VARCHAR2(50 CHAR), 
	"CODEPAYSNAISSANCE" VARCHAR2(3 CHAR), 
	"DATEDECES" DATE, 
	"CODEPOSTALDOM" VARCHAR2(10 CHAR), 
	"LOCALITEDOM" VARCHAR2(50 CHAR), 
	"CODEPAYSDOM" VARCHAR2(3 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger ETUDIANTMATRICULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "JAVAUXRA"."ETUDIANTMATRICULE" 
BEFORE INSERT ON ETUDIANTS
FOR EACH ROW
DECLARE
MauvaiseDateNaissanceException EXCEPTION;
BEGIN
  IF :NEW.DATENAISSANCE > CURRENT_DATE THEN
    RAISE MauvaiseDateNaissanceException;
  END IF;
  
  :NEW.MATRICULE := 
    CASE
      WHEN :NEW.SEXE = 'F' THEN '2'
      ELSE '1'
    END
    || TO_CHAR(:NEW.DATENAISSANCE, 'YYMMDD')
    || UPPER(SUBSTR(:NEW.NOM, 0, 3))
    || UPPER(SUBSTR(:NEW.PRENOM, 0, 3));
EXCEPTION
  WHEN MauvaiseDateNaissanceException THEN
    RAISE_APPLICATION_ERROR(-20001, 'Date de naissance invalide');
END;
/
ALTER TRIGGER "JAVAUXRA"."ETUDIANTMATRICULE" ENABLE;
--------------------------------------------------------
--  DDL for Table PARCOURS_HE
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."PARCOURS_HE" 
   (	"MATRICULE" VARCHAR2(13 CHAR), 
	"ANSCO" VARCHAR2(4 CHAR), 
	"ANNETUD" NUMBER(1,0), 
	"REFFORMDET" VARCHAR2(16 CHAR), 
	"REFIMPLAN" VARCHAR2(10 CHAR), 
	"DATEINSCRIPTION" DATE, 
	"REFGROUPE" VARCHAR2(32 CHAR), 
	"DATESORTIE" DATE, 
	"RESULTAT" VARCHAR2(5 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PARCOURS_HE_SESS
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."PARCOURS_HE_SESS" 
   (	"MATRICULE" VARCHAR2(13 CHAR), 
	"ANSCO" VARCHAR2(4 CHAR), 
	"SESS" NUMBER(1,0), 
	"TOTAL" NUMBER(3,0), 
	"MENTION" VARCHAR2(4 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger ETUDIANTSUPDMATRICULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "JAVAUXRA"."ETUDIANTSUPDMATRICULE" 
BEFORE UPDATE OF MATRICULE ON ETUDIANTS 
FOR EACH ROW 
BEGIN
  UPDATE PARCOURS_HE SET MATRICULE = :NEW.MATRICULE
  WHERE MATRICULE = :OLD.MATRICULE;
  
  UPDATE PARCOURS_HE_SESS SET MATRICULE = :NEW.MATRICULE
  WHERE MATRICULE = :OLD.MATRICULE;
END;
/
ALTER TRIGGER "JAVAUXRA"."ETUDIANTSUPDMATRICULE" ENABLE;
--------------------------------------------------------
--  DDL for Table FORMATIONS
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."FORMATIONS" 
   (	"REFFORMATION" VARCHAR2(16 CHAR), 
	"CYCLE" NUMBER(1,0), 
	"FORMATION" VARCHAR2(150 CHAR), 
	"TYPEENS" VARCHAR2(8 CHAR), 
	"REFCATEG" VARCHAR2(10 CHAR), 
	"MAXANNETUD" NUMBER(1,0), 
	"TITRE" VARCHAR2(100 CHAR), 
	"TYPE" VARCHAR2(15 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FORMATIONS_DET
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."FORMATIONS_DET" 
   (	"REFFORMDET" VARCHAR2(16 CHAR), 
	"REFFORMATION" VARCHAR2(16 CHAR), 
	"CYCLE" NUMBER(1,0), 
	"OPT" VARCHAR2(70 CHAR), 
	"FINALITE" VARCHAR2(70 CHAR), 
	"GROUPE" VARCHAR2(70 CHAR), 
	"SOUSSECTION" VARCHAR2(70 CHAR), 
	"ORIENTATION" VARCHAR2(70 CHAR), 
	"ABREVIATION" VARCHAR2(32 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GROUPES
--------------------------------------------------------

  CREATE TABLE "JAVAUXRA"."GROUPES" 
   (	"REFGROUPE" VARCHAR2(32 CHAR), 
	"REFFORMDET" VARCHAR2(16 CHAR), 
	"ANNETUD" NUMBER(1,0), 
	"ANSCO" VARCHAR2(4 CHAR), 
	"REFIMPLAN" VARCHAR2(10 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger GROUPESREFGROUPES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "JAVAUXRA"."GROUPESREFGROUPES" 
BEFORE INSERT OR UPDATE ON GROUPES
FOR EACH ROW  WHEN (NEW.REFIMPLAN = 'INPS') DECLARE
MaxAnnetudVar FORMATIONS.MAXANNETUD%TYPE;
MauvaiseNumGroupeException EXCEPTION;
BEGIN
  SELECT MAX(F.MAXANNETUD) INTO MaxAnnetudVar
      FROM FORMATIONS F
      INNER JOIN FORMATIONS_DET FD
        ON FD.REFFORMATION = F.REFFORMATION
      INNER JOIN GROUPES G
        ON G.REFFORMDET = FD.REFFORMDET
      WHERE G.REFGROUPE = :NEW.REFGROUPE;

  IF SUBSTR(:NEW.REFGROUPE, 2, 1) > MaxAnnetudVar THEN
    RAISE MauvaiseNumGroupeException;
  END IF;
EXCEPTION
  WHEN MauvaiseNumGroupeException THEN
    RAISE_APPLICATION_ERROR(-20001, 'Numero de groupe invalide');
END;
/
ALTER TRIGGER "JAVAUXRA"."GROUPESREFGROUPES" ENABLE;
--------------------------------------------------------
--  DDL for Synonymn PLITBLM
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "PLITBLM" FOR "SYS"."PLITBLM";
--------------------------------------------------------
--  DDL for Trigger LIMITETUDGROUPES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "JAVAUXRA"."LIMITETUDGROUPES" 
  FOR INSERT OR UPDATE ON PARCOURS_HE
    COMPOUND TRIGGER

  TYPE CACHE IS TABLE OF rowid INDEX BY BINARY_INTEGER;
  cache_groupes CACHE;
  nbre NUMBER;

  TropDElevesException EXCEPTION;

  BEFORE STATEMENT IS
  BEGIN
    cache_groupes.delete;
  END BEFORE STATEMENT;

  AFTER EACH ROW IS
  BEGIN
    cache_groupes(cache_groupes.count + 1) := :new.rowid;
  END AFTER EACH ROW;

  AFTER STATEMENT IS
  BEGIN
    FOR i IN 1..cache_groupes.count LOOP
      SELECT COUNT(*) INTO nbre
      FROM PARCOURS_HE
      WHERE (refgroupe, ansco) = (SELECT refgroupe, ansco
        FROM PARCOURS_HE
        WHERE rowid = cache_groupes(i)
      );
      IF nbre > 15 THEN
        RAISE TropDElevesException;
      END IF;
    END LOOP;
  END AFTER STATEMENT;
END LIMITETUDGROUPES;
/
ALTER TRIGGER "JAVAUXRA"."LIMITETUDGROUPES" ENABLE;

IDENTIFICATION DIVISION.
PROGRAM-ID. ListerEmployes.
ENVIRONMENT DIVISION.
DATA DIVISION.
WORKING-STORAGE SECTION.
           EXEC SQL BEGIN DECLARE SECTION END-EXEC.
01  RecEmploye.
    02  Empno          PIC S9(8) BINARY.
    02  Ename          PIC X(10).
    02  Job            PIC X(9).
    02  HireDate       PIC X(10).
01  MessageErr PIC X(100).
01  NbreEmployes PIC S9(4) BINARY.
01  i PIC S9(4) BINARY.
           EXEC SQL END DECLARE SECTION END-EXEC.
           EXEC SQL INCLUDE SQLCA END-EXEC.
PROCEDURE DIVISION.
BeginPgm.
     MOVE SPACES TO MessageErr
     EXEC SQL EXECUTE
     BEGIN
      GESTIONEMPLOYES.TableEmployes := SCOTT.GESTIONEMPLOYES.LISTER;
      :NbreEmployes := GESTIONEMPLOYES.TableEmployes.COUNT;
     EXCEPTION
      WHEN OTHERS THEN
          :MessageErr := SUBSTR(SQLERRM,1,100);
     END;
     END-EXEC
     IF MessageErr NOT = SPACES  
       THEN DISPLAY "Erreur message " MessageErr 
       ELSE
      	DISPLAY "NOM      ",  " DATE            " ,"Empno           " 
       
       PERFORM TEST BEFORE VARYING i FROM 1 BY 1 UNTIL i > NbreEmployes
       	MOVE SPACES TO MessageErr
       	EXEC SQL EXECUTE
     	BEGIN
       	:Ename := GESTIONEMPLOYES.TableEmployes(:i).Ename;
       	:Empno := GESTIONEMPLOYES.TableEmployes(:i).Empno;
       	-- A tester : Le Job est NULL ?
     	--:Job := GESTIONEMPLOYES.TableEmployes(:i).Job;
     	:HireDate := 
      TO_CHAR(GESTIONEMPLOYES.TableEmployes(:i).HireDate,'DD/MM/YYYY');
     	EXCEPTION WHEN OTHERS THEN
      	:MessageErr := SUBSTR(SQLERRM,1,100);
       END;
       END-EXEC
       	IF MessageErr NOT = SPACES THEN 
               DISPLAY "Erreur message " MessageErr 
         ELSE  
       	DISPLAY Ename, HireDate , Empno WITH CONVERSION
       	END-IF
       END-PERFORM
        
        DISPLAY 'Nbre d''employes ', NbreEmployes WITH CONVERSION
      END-IF
      DISPLAY "Actionner une touche"
      ACCEPT MessageErr
      EXIT PROGRAM.  		 	
           
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainForm.java
 *
 * Created on 7 juin 2011, 16:42:20
 */
package inpresbus.ui;

import inpresbus.beans.BusAlertAnalyzeBean;
import inpresbus.beans.BusAlertGeneratorBean;
import inpresbus.data.Horaire;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;
import network.NetworkStringSender;

/**
 *
 * @author rapha
 */
public class MainForm extends javax.swing.JFrame {
    protected NetworkStringSender _sender;
    
    /** Creates new form MainForm */
    public MainForm(int port)
            throws Exception
    {
        initComponents();
        
        this.setTitle(this.getTitle() + " (port : "+ port +")");
        
        this._sender = new NetworkStringSender("127.0.0.1", port);
        
        this._initIncidents();
        
        this._chargerHoraires(true);
    }
    
    private void _initIncidents()
    {
        BusAlertGeneratorBean beanGenerator = new BusAlertGeneratorBean();
        
        // TODO: Final
        final MainForm nestedThis = this;
        
        final BusAlertAnalyzeBean beanAlertDialog = new BusAlertAnalyzeBean(this, true);
        beanAlertDialog.addPropertyChangeListener(
            new PropertyChangeListener() {
                public void propertyChange(PropertyChangeEvent pce)
                {
                    nestedThis._sender.sendString(
                        beanAlertDialog.getMessageHoraireATransmettre()
                    );
                }
            }
        );      
                
        beanGenerator.addAlertListener(beanAlertDialog);
    }
    
    private void _chargerHoraires(boolean sendAll)
            throws Exception
    {
        DefaultTableModel model = (DefaultTableModel) this.tableHoraires.getModel();
        
        ArrayList<Horaire> horaires = new ArrayList<Horaire>();
        
        for (String nomHoraire : Horaire.dir.listerObjets()) {
            Horaire horaire = Horaire.dir.chargerObjet(nomHoraire);
            
            if (horaire.getHeureDepart().after(Calendar.getInstance().getTime()))
                horaires.add(horaire);
        }
        
        Collections.sort(horaires);
        
        StringBuilder str = new StringBuilder();
        
        for (Horaire horaire : horaires) {            
            // Ajoute au client
            str.append("Ligne: ")
               .append(horaire.getLigne().getNom())
               .append(" - ")
               .append("Conducteur: ")
               .append(horaire.getConducteur().getPrenom())
               .append(horaire.getConducteur().getNom())
               .append(" - ")
               .append("Bus: ")
               .append(horaire.getBus().getIdentifiant())
               .append(" - ")
               .append("Départ: ")
               .append(horaire.getHeureDepart())
               .append('\n'); 
            
            // Ajoute au modèle
            model.addRow(new Object[] {
                horaire.getLigne().getNom(),
                horaire.getConducteur().toString(),
                horaire.getBus().getIdentifiant(),
                horaire.getHeureDepart()
            });
        }
        
        this._sender.sendString(str.toString());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHoraires = new javax.swing.JTable();
        menu = new javax.swing.JMenuBar();
        menuBus = new javax.swing.JMenu();
        menuAjoutBus = new javax.swing.JMenuItem();
        menuListerBus = new javax.swing.JMenuItem();
        menuConducteurs = new javax.swing.JMenu();
        menuAjoutConducteur = new javax.swing.JMenuItem();
        menuListerConducteurs = new javax.swing.JMenuItem();
        menuLignes = new javax.swing.JMenu();
        menuAjoutLigne = new javax.swing.JMenuItem();
        menuListerlIgnes = new javax.swing.JMenuItem();
        menuHoraires = new javax.swing.JMenu();
        menuAjoutHoraire = new javax.swing.JMenuItem();
        menuListerHoraires = new javax.swing.JMenuItem();
        menuAide = new javax.swing.JMenu();
        menuAPropos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inpres Bus");

        jLabel1.setFont(new java.awt.Font("Sans Serif", 0, 18)); // NOI18N
        jLabel1.setText("Horaires à suivre");

        tableHoraires.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ligne", "Conducteur", "Bus", "Départ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableHoraires);

        menuBus.setText("Bus");

        menuAjoutBus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/add.png"))); // NOI18N
        menuAjoutBus.setText("Ajouter un bus");
        menuAjoutBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAjoutBusActionPerformed(evt);
            }
        });
        menuBus.add(menuAjoutBus);

        menuListerBus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/list.png"))); // NOI18N
        menuListerBus.setText("Lister les bus");
        menuListerBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListerBusActionPerformed(evt);
            }
        });
        menuBus.add(menuListerBus);

        menu.add(menuBus);

        menuConducteurs.setText("Conducteurs");

        menuAjoutConducteur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/add.png"))); // NOI18N
        menuAjoutConducteur.setText("Ajouter un conducteur");
        menuAjoutConducteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAjoutConducteurActionPerformed(evt);
            }
        });
        menuConducteurs.add(menuAjoutConducteur);

        menuListerConducteurs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/list.png"))); // NOI18N
        menuListerConducteurs.setText("Lister les conducteurs");
        menuListerConducteurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListerConducteursActionPerformed(evt);
            }
        });
        menuConducteurs.add(menuListerConducteurs);

        menu.add(menuConducteurs);

        menuLignes.setText("Lignes");

        menuAjoutLigne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/add.png"))); // NOI18N
        menuAjoutLigne.setText("Ajouter une ligne");
        menuAjoutLigne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAjoutLigneActionPerformed(evt);
            }
        });
        menuLignes.add(menuAjoutLigne);

        menuListerlIgnes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/list.png"))); // NOI18N
        menuListerlIgnes.setText("Lister les lignes");
        menuListerlIgnes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListerlIgnesActionPerformed(evt);
            }
        });
        menuLignes.add(menuListerlIgnes);

        menu.add(menuLignes);

        menuHoraires.setText("Horaires");

        menuAjoutHoraire.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/add.png"))); // NOI18N
        menuAjoutHoraire.setText("Ajouter un horaire");
        menuAjoutHoraire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAjoutHoraireActionPerformed(evt);
            }
        });
        menuHoraires.add(menuAjoutHoraire);

        menuListerHoraires.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/list.png"))); // NOI18N
        menuListerHoraires.setText("Lister les horaires");
        menuListerHoraires.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListerHorairesActionPerformed(evt);
            }
        });
        menuHoraires.add(menuListerHoraires);

        menu.add(menuHoraires);

        menuAide.setText("Aide");
        menuAide.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuAideMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        menuAide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAideActionPerformed(evt);
            }
        });

        menuAPropos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inpresbus/ui/icons/about.png"))); // NOI18N
        menuAPropos.setText("A propos");
        menuAPropos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAProposActionPerformed(evt);
            }
        });
        menuAide.add(menuAPropos);

        menu.add(menuAide);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAideActionPerformed

    }//GEN-LAST:event_menuAideActionPerformed

    private void menuAideMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuAideMenuSelected

    }//GEN-LAST:event_menuAideMenuSelected

    private void menuAProposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAProposActionPerformed
        new APropos(this, true).setVisible(true);
    }//GEN-LAST:event_menuAProposActionPerformed

    private void menuAjoutBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAjoutBusActionPerformed
        new NouveauBus(this, true).setVisible(true);
    }//GEN-LAST:event_menuAjoutBusActionPerformed

    private void menuListerBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListerBusActionPerformed
        new ListeBus(this, true).setVisible(true);
    }//GEN-LAST:event_menuListerBusActionPerformed

    private void menuAjoutConducteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAjoutConducteurActionPerformed
        try {
            new NouveauConducteur(this, true).setVisible(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_menuAjoutConducteurActionPerformed

    private void menuListerConducteursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListerConducteursActionPerformed
        try {
            new ListeConducteurs(this, true).setVisible(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_menuListerConducteursActionPerformed

    private void menuAjoutLigneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAjoutLigneActionPerformed
        new NouvelleLigne(this, true).setVisible(true);
    }//GEN-LAST:event_menuAjoutLigneActionPerformed

    private void menuListerlIgnesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListerlIgnesActionPerformed
        try {
            new ListeLignes(this, true).setVisible(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_menuListerlIgnesActionPerformed

    private void menuAjoutHoraireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAjoutHoraireActionPerformed
        new NouvelHoraire(this, true).setVisible(true);
    }//GEN-LAST:event_menuAjoutHoraireActionPerformed

    private void menuListerHorairesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListerHorairesActionPerformed
        try {
            new ListeHoraires(this, true).setVisible(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_menuListerHorairesActionPerformed

    public void addHoraire(Horaire horaire) {
        if (horaire.getHeureDepart().after(Calendar.getInstance().getTime())) {
            DefaultTableModel model = (DefaultTableModel) this.tableHoraires.getModel();
            
            StringBuilder str = new StringBuilder();
            
            // Envoi au terminal
            str.append("Ligne: ")
               .append(horaire.getLigne().getNom())
               .append(" - ")
               .append("Conducteur: ")
               .append(horaire.getConducteur().getPrenom())
               .append(horaire.getConducteur().getNom())
               .append(" - ")
               .append("Bus: ")
               .append(horaire.getBus().getIdentifiant())
               .append(" - ")
               .append("Départ: ")
               .append(horaire.getHeureDepart())
               .append('\n'); 
            
            this._sender.sendString(str.toString());
            
            // Ajoute au modèle
            model.addRow(new Object[] {
                horaire.getLigne().getNom(),
                horaire.getConducteur().toString(),
                horaire.getBus().getIdentifiant(),
                horaire.getHeureDepart()
            });
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new MainForm(5000).setVisible(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem menuAPropos;
    private javax.swing.JMenu menuAide;
    private javax.swing.JMenuItem menuAjoutBus;
    private javax.swing.JMenuItem menuAjoutConducteur;
    private javax.swing.JMenuItem menuAjoutHoraire;
    private javax.swing.JMenuItem menuAjoutLigne;
    private javax.swing.JMenu menuBus;
    private javax.swing.JMenu menuConducteurs;
    private javax.swing.JMenu menuHoraires;
    private javax.swing.JMenu menuLignes;
    private javax.swing.JMenuItem menuListerBus;
    private javax.swing.JMenuItem menuListerConducteurs;
    private javax.swing.JMenuItem menuListerHoraires;
    private javax.swing.JMenuItem menuListerlIgnes;
    private javax.swing.JTable tableHoraires;
    // End of variables declaration//GEN-END:variables

}

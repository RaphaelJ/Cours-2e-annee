package inpresbus.ui;

import inpresbus.data.Bus;
import inpresbus.data.Conducteur;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class ListeConducteurs extends javax.swing.JDialog {

    class BusHabituelActionListener implements ActionListener {
        protected Conducteur conducteur;
        
        public BusHabituelActionListener(Conducteur conducteur)
        {
            this.conducteur = conducteur;
        }
        
        public void actionPerformed(ActionEvent e)
        {
            try {
                JComboBox combo = (JComboBox) e.getSource();

                Bus nouveauBus;
                if (combo.getSelectedIndex() == 0)
                    nouveauBus = null;
                else {
                    nouveauBus = Bus.dir.chargerObjet(
                        (String) combo.getSelectedItem()
                    );
                }

                if (this.conducteur.getBusHabituel() != nouveauBus) {
                    this.conducteur.setBusHabituel(nouveauBus);
                    Conducteur.dir.enregistrerObjet(
                        this.conducteur,
                        this.conducteur.getIdentifiant()
                    );
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    
    /** Creates new form ListeConducteurs */
    public ListeConducteurs(java.awt.Frame parent, boolean modal)
            throws Exception
    {
        super(parent, modal);
        initComponents();
        
        this._chargerListeConducteurs();
    }
    
    private void _chargerListeConducteurs() throws Exception
    {
        DefaultTreeModel model = (DefaultTreeModel) this.treeConducteurs.getModel();
        DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode) model.getRoot();
        
        // Permet d'afficher les CheckBox
        this.treeConducteurs.setCellRenderer(new EditableTreeRenderer());
        
        // Permet l'édition des CheckBox
        this.treeConducteurs.setCellEditor(new EditableTreeEditor());
        
        this.treeConducteurs.setEditable(true);
        
        for (String sConducteur : Conducteur.dir.listerObjets()) {
            Conducteur conducteur = Conducteur.dir.chargerObjet(sConducteur);
            
            DefaultMutableTreeNode conducteurNode;
            if (!conducteur.getNom().equals("")
                    || !conducteur.getPrenom().equals("")){
                conducteurNode = new DefaultMutableTreeNode(
                    conducteur.getIdentifiant() + " - " +
                    conducteur.getPrenom() + " " + conducteur.getNom()
                );
            } else {
                conducteurNode = new DefaultMutableTreeNode(
                    conducteur.getIdentifiant()
                );
            }
            
            if (!conducteur.getNom().equals("")) {
                 conducteurNode.add(new DefaultMutableTreeNode(
                    "Nom: " + conducteur.getNom()
                ));
            }
            
            if (!conducteur.getPrenom().equals("")) {
                conducteurNode.add(new DefaultMutableTreeNode(
                    "Prénom: " + conducteur.getPrenom()
                ));
            }
            
            JComboBox combo = new JComboBox();
            DefaultComboBoxModel comboModel = (DefaultComboBoxModel) combo.getModel();
            
            comboModel.addElement("Aucun");
            
            int i = 1;
            for (String bus : Bus.dir.listerObjets()) {
                comboModel.addElement(bus);
                
                if (conducteur.getBusHabituel() != null
                    && bus.equals(conducteur.getBusHabituel().getIdentifiant())) {
                    combo.setSelectedIndex(i);
                }
                
                i++;
            }
            
            combo.addActionListener(new BusHabituelActionListener(conducteur));
            conducteurNode.add(new DefaultMutableTreeNode(combo));
            
            rootNode.add(conducteurNode);
        }
        
        model.reload();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        treeConducteurs = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Liste des conducteurs");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Conducteurs");
        treeConducteurs.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(treeConducteurs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    ListeConducteurs dialog = new ListeConducteurs(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ListeConducteurs.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree treeConducteurs;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NouvelHoraire.java
 *
 * Created on 6 juin 2011, 23:15:37
 */
package inpresbus.ui;

import inpresbus.data.Bus;
import inpresbus.data.Conducteur;
import inpresbus.data.Horaire;
import inpresbus.data.Ligne;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author rapha
 */
public class NouvelHoraire extends javax.swing.JDialog {

    /** Creates new form NouvelHoraire */
    public NouvelHoraire(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
            
        try {
            this._chargerBus();
            this._chargerConducteurs();                
            this._chargerLignes();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void _chargerBus() throws Exception
    {
        DefaultListModel model = (DefaultListModel) this.listBus.getModel();
        
        for (String nomBus : Bus.dir.listerObjets()) {
            // Vérifie que le bus est en service
            if (Bus.dir.chargerObjet(nomBus).isEnService()) 
                model.addElement((Object) nomBus);
        }
    }
    
    private void _chargerConducteurs() throws Exception
    {
        DefaultListModel model = (DefaultListModel) this.listConducteurs.getModel();
        
        for (String nomConducteur : Conducteur.dir.listerObjets()) {
            model.addElement((Object) nomConducteur);
        }
    }
    
    private void _chargerLignes() throws Exception
    {
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.comboLignes.getModel();
        
        for (String nomLigne : Ligne.dir.listerObjets()) {
            model.addElement((Object) nomLigne);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelBus = new javax.swing.JLabel();
        labelConducteurs = new javax.swing.JLabel();
        labelLignes = new javax.swing.JLabel();
        labelDepart = new javax.swing.JLabel();
        butEnregistrer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listConducteurs = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        listBus = new javax.swing.JList();
        comboLignes = new javax.swing.JComboBox();
        picketDepart = new com.lavantech.gui.comp.DateTimePicker();
        labelErreur = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nouvel horaire");

        labelBus.setText("Bus:");

        labelConducteurs.setText("Conducteur:");

        labelLignes.setText("Ligne:");

        labelDepart.setText("Départ:");

        butEnregistrer.setText("Enregistrer");
        butEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEnregistrerActionPerformed(evt);
            }
        });

        listConducteurs.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(listConducteurs);

        listBus.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(listBus);

        labelErreur.setFont(new java.awt.Font("Sans Serif", 1, 13)); // NOI18N
        labelErreur.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDepart)
                        .addGap(6, 6, 6)
                        .addComponent(picketDepart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelErreur, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(butEnregistrer))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelBus)
                            .addComponent(labelLignes))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboLignes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelConducteurs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelBus)
                                .addGap(104, 104, 104))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelLignes)
                            .addComponent(comboLignes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(labelConducteurs)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDepart)
                    .addComponent(labelErreur, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(picketDepart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butEnregistrer))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEnregistrerActionPerformed
        String sBus = (String) this.listBus.getSelectedValue();
        String sConducteur = (String) this.listConducteurs.getSelectedValue();
        // Pourquoi Item sur les combo et Value sur les liste ???!!??
        String sLigne = (String) this.comboLignes.getSelectedItem();
        
        if (sBus == null) {
            this.labelErreur.setText("Veuillez sélectionner un bus.");
        } else if (sConducteur == null) {
            this.labelErreur.setText("Veuillez sélectionner un conducteur.");
        } else if (sLigne == null) {
            this.labelErreur.setText("Veuillez sélectionner une ligne.");
        } else {
            try {
                Bus bus = Bus.dir.chargerObjet(sBus);
                Conducteur conducteur = Conducteur.dir.chargerObjet(sConducteur);
                Ligne ligne = Ligne.dir.chargerObjet(sLigne);
                Date depart = this.picketDepart.getCalendar().getTime();
                
                Horaire horaire = new Horaire(
                    bus, conducteur, ligne, depart
                );
                
                ((MainForm) this.getParent()).addHoraire(horaire);
                
                Horaire.dir.enregistrerObjet(
                    horaire,
                    // Utilise la difference par raport à l'epoch
                    // pour identifier les horaires
                    String.valueOf(Calendar.getInstance().getTimeInMillis())
                );
                
                this.dispose();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_butEnregistrerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NouvelHoraire dialog = new NouvelHoraire(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butEnregistrer;
    private javax.swing.JComboBox comboLignes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelBus;
    private javax.swing.JLabel labelConducteurs;
    private javax.swing.JLabel labelDepart;
    private javax.swing.JLabel labelErreur;
    private javax.swing.JLabel labelLignes;
    private javax.swing.JList listBus;
    private javax.swing.JList listConducteurs;
    private com.lavantech.gui.comp.DateTimePicker picketDepart;
    // End of variables declaration//GEN-END:variables
}
